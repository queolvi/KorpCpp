Ярославский филиал Московского финансово-юридического университета
МФЮА
ПРАКТИЧЕСКАЯ РАБОТА №1
ПО ДИСЦИПЛИНЕ
“Операционные системы и среды”
Автор:
Студент группы 31ИПо8381
Корпачев Д.Д
Руководитель:
Фурмавнин С.А
Ярославль 2024



Вариант №1
Задание №18

Цель работы:
Написать скрипт, который читает заданный пользователем
файл (в файле содержатся пары чисел, разделенных запятыми) и меняет числа
в парах местами.


Теоретические сведения:
! - отрицание
-f возвращает истиное значение(в контексте скрипта)
if - условие если
then - тогда
elif - (else if), иначе если
else - иначе
fi - ключевое слово, которое используется для завершения условного оператора if
echo - вывод текста
rm - удаление
-r - указывает на то, что бы отключить интерпретирование обратных слешей
mv - используется для перемещения/переименования файлов
mktemp - создаёт временный файл

Расчётно-графическая часть:

Разберём задачу на блоки(подзадачи)

I Блок:
1. Сделаем файл читаемым для bash'a, как скрипт
2. Теперь проверяем, существует ли файл с входными данными, в нашем случае - input.txt и  нужно вернуть истинное значение, если файл не существует
3. Если файл не найден, выводим сообщение об ошибке в стандартный поток ошибок и завершаем выполнение скрипта с кодом ошибки 1
4. Завершаем блок if

II Блок: 
1. Можем создать временный файл с помощью команды mktemp, путь к которому сохраняется в переменной tmpfile, будем использовать этот файл для хранения временных данных

III Блок:
1. Нам нужен цикл while, который читает строки из файла input.txt со входными данными, разделяя их запятой (IFS=, ). И так же, каждое значение будет сохраняться в переменные num1 и num2
2. Берём if и проверяем, является ли переменная num2 пустой, что вполне может указывать на то, что строка в файле input.txt может иметь невалидное значение или его отсутствие
3. Если num2 пустое, то выводим сообщение об ошибке в стандартный поток ошибок, временный файл мы удаляем с помощью rm, и завершаем скрипт с кодом ошибки 1
4. Завершаем блок if
5. Записываем в временный файл строки в обратном порядке, то есть второе число num2 будет первым, а первое num1 - вторым. В общем говоря, производим инвертирование значений
6. Завершаем цикл while и указываем на то, что данные для чтения берутся из файла input.txt

IV Блок: 
1. После завершения цикла временный файл tmpfile переименовываем в input.txt, заменяем исходный файл
2. Выводим сообщение о том, что все пары чисел были успешно обновлены и записаны обратно в input.txt
3. Завершаем выполнение скрипта с кодом 0, корректный исход

Синтез решения: 
#!/bin/bash

if [ ! -f "input.txt" ]; then
  echo "Ошибка: Файл input.txt не найден." >&2
  exit 1
fi

tmpfile=$(mktemp)

while IFS=, read -r num1 num2; do
  if [ -z "$num2" ]; then
    echo "Ошибка: Некорректный формат строки в файле input.txt" >&2
    rm "$tmpfile"
    exit 1
  fi

  echo "$num2,$num1" >> "$tmpfile"
done < "input.txt"

mv "$tmpfile" "input.txt"

echo "Числа в парах успешно поменяны местами в файле input.txt"

exit 0

Проведём тест:
Есть файл input.txt с входными данными, попробуем выполнить корректное завершение программы и некорректное.


Вывод: В ходе решения задания я узнал, как можно делать инвертирование переменных, немного получил практического опыта в написании объяснений моего скрипта


