Ярославский филиал Московского финансово-юридического университета
МФЮА
ПРАКТИЧЕСКАЯ РАБОТА №1
ПО ДИСЦИПЛИНЕ
“Операционные системы и среды”
Автор:
Студент группы 31ИПо8381
Корпачев Д.Д
Руководитель:
Фурмавнин С.А
Ярославль 2024



Вариант №1
Задание №1

Цель работы:
Создать скрипт, находящий сумму двух переданных ему
аргументов. Вывести результат сложения и сообщение о том, меньше ли
результат нуля, либо больше, либо равен нулю.

Теоретические сведения: 

Используемые команды в скрипте:
> - считывание данных откуда-то
< - запись данных куда-то
$ - используется для обозначения переменных
read - используется для считывания данных, в нашем случае из input.txt
lt - оператор сравнения, который используется для проверки, меньше ли одно число другого 
gt - оператор сравнения, который используется для проверки, больше ли одно число другого
if - условие если
then - тогда
elif - (else if), иначе если
else - иначе
fi - ключевое слово, которое используется для завершения условного оператора if
echo - вывод текста


Расчётно-графическая часть

Разберём нашу задачу:
Нам предоставляется создать скрипт, но прежде нужно разбить код на блоки и подзадачи:
I Блок
1. Стоит объявить bash'у, что этот файл - скрипт
2. Нам нужно объявить и прочитать две переменные - те, которые мы записали в файл input.txt
3. Объявим переменную, в которой будет храниться результат суммы двух чисел
4. В файл, предназначенный для вывода - output.txt мы выведем переменную суммы двух чисел
II Блок
1. Напишем условие, при котором результат меньше нуля.
1.1 Печатаем текст и направляем его в файл логов
2. Напишем условие, при котором результат больше нуля.
2.2 Печатаем текст и направляем его в файл логов 
3. Напишем "иначе", при котором результат будет равен 0, и завершение цикла.
3.3 Печатаем текст и направляем его в файл логов 
4. Завершаем if
Приступим к написанию скрипта и решению подзадач:


I Блок
1. Объявим bash'у, что этот файл - скрипт : #!/bin/bash  
2. Передаём две переменные : read a b < input.txt  
3. Cуммируем переменные и кладём в объявленную переменную : sum=$((a + b))
4. Вводим в выходной файл переменную суммы: echo $sum > output.txt

II Блок
1. Пишем условие, при котором результат меньше нуля : if [ $sum -lt 0 ]; then 
1.2 Отправляем текст в логи : echo "Результат < 0" >> log.txt
2. Пишем условие, при котором результат больше нуля : elif [ $sum -gt 0 ]; then
2.2 Отправляем текст в логи echo "Результат > 0" >> log.txt
3. Иначе, число равно нулю : else
3.3 Отправляем текст в логи : echo "Результат = 0" >> log.txt 
4. Завершаем условие if : fi

В итоге получаем готовый скрипт:

#!/bin/bash

read a b < input.txt
sum=$((a + b))
echo $sum > output.txt

if [ $sum -lt 0 ]; then
    echo "Результат < 0" >> log.txt
elif [ $sum -gt 0 ]; then
    echo "Результат > 0" >> log.txt
else
    echo "Результат = 0" >> log.txt
fi

Теперь, когда скрипт написан, протестируем его:
В input.txt поочерёдно вписывались такие значения:
1 3
5 7
-12 -5
4 -17
96 -44
15 -15
Что мы получим


Как определялись результаты:


Вывод:
В ходе выполнения этого задания я не столкнулся с большими проблемами, возможно, в самом начале - я ошибался в синтаксисе. Но главное, что я потренировался разбивать план на части и немного получил практических навыков. Я думаю, что этот скрипт можно, но скорее излишне будет нагружать чем-либо ещё. Но, признаться честно, было неудобно, что я не мог сразу ввести все данные в input.txt, потому что скрипт работает только для одной операции вывода результата. Вместо множества снимков экрана, можно было обойтись всего несколькими.



